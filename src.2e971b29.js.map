{"version":3,"sources":["task-3.js","index.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","delay","setTimeout","canProcess","Promise","resolve","reject","logSuccess","id","time","console","log","logError","warn","amount","then","catch"],"mappings":";;;AAAA,IAAMA,EAA4B,SAACC,EAAKC,GAC/BC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAkB,SAAAC,GAChBC,IAAAA,EAAQR,EAA0B,IAAK,KAE7CS,WAAW,WACHC,IAAAA,EAAaP,KAAKE,SAAW,GAE5B,OAAA,IAAIM,QAAQ,SAACC,EAASC,GACvBH,GACFE,IAEFC,OAODL,IAGCM,EAAa,SAACC,EAAIC,GACtBC,QAAQC,IAAmBH,eAAAA,OAAAA,EAAmBC,kBAAAA,OAAAA,EAA9C,QAGIG,EAAW,SAAAJ,GACfE,QAAQG,KAAqCL,gCAAAA,OAAAA,EAA7C,+BAMFT,EAAgB,CAAES,GAAI,GAAIM,OAAQ,KAAOP,EAAYK,GACrDb,EAAgB,CAAES,GAAI,GAAIM,OAAQ,KAAOP,EAAYK,GACrDb,EAAgB,CAAES,GAAI,GAAIM,OAAQ,IAAMP,EAAYK,GACpDb,EAAgB,CAAES,GAAI,GAAIM,OAAQ,KAAOP,EAAYK,GAIrDb,EAAgB,CAAES,GAAI,GAAIM,OAAQ,MAAOC,KAAKR,GAAYS,MAAMJ,GAEhEb,EAAgB,CAAES,GAAI,GAAIM,OAAQ,MAAOC,KAAKR,GAAYS,MAAMJ,GAEhEb,EAAgB,CAAES,GAAI,GAAIM,OAAQ,KAAMC,KAAKR,GAAYS,MAAMJ,GAE/Db,EAAgB,CAAES,GAAI,GAAIM,OAAQ,MAAOC,KAAKR,GAAYS,MAAMJ;;AC7ChE,aAHA,QAAA,oBAGA,QAAA","file":"src.2e971b29.js","sourceRoot":"../src","sourcesContent":["const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = transaction => {\n  const delay = randomIntegerFromInterval(200, 500);\n\n  setTimeout(() => {\n    const canProcess = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n      if (canProcess) {\n        resolve();\n      }\n      reject();\n    });\n\n    if (canProcess) {\n      onSuccess(transaction.id, delay);\n    } else {\n    }\n  }, delay);\n};\n\nconst logSuccess = (id, time) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n/*\n * Работает так\n */\nmakeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\nmakeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\nmakeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\nmakeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n/*\n * Должно работать так\n */\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\n","import './sass/main.scss';\n// import './task-1.js';\n// import './task-2.js';\nimport './task-3.js';\n// const myPromise = new Promise((resolve, reject) => {\n//   const result = Math.random() > 0.5;\n//   setTimeout(() => {\n//     if (result) {\n//       resolve('This is success resolve');\n//     }\n//     reject('This is failed promise');\n//   }, 2000);\n// });\n// myPromise\n//   .then(result => {\n//     console.log(result);\n//   })\n//   .catch(error => console.log(error));\n"]}